/* tslint:disable */
/* eslint-disable */
/**
 * Remote Config Delivery API
 * Remote Config Settings Delivery API
 *
 * The version of the OpenAPI document: 1.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Configuration } from "./configuration";
// Some imports not used depending on template conditions
// @ts-ignore
import globalAxios, {
  AxiosPromise,
  AxiosInstance,
  AxiosRequestConfig,
} from "axios";

export const BASE_PATH = "https://config.unity3d.com".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
  csv: ",",
  ssv: " ",
  tsv: "\t",
  pipes: "|",
};

/**
 *
 * @export
 * @interface RequestArgs
 */
export interface RequestArgs {
  url: string;
  options: AxiosRequestConfig;
}

export class BaseAPI {
  protected configuration: Configuration | undefined;
  constructor(
    configuration?: Configuration,
    protected basePath: string = BASE_PATH,
    protected axios: AxiosInstance = globalAxios
  ) {
    this.configuration = new Configuration();
    if (configuration) {
      this.configuration = new Configuration(configuration);
      this.basePath = configuration.basePath || this.basePath;
    }

    let baseOptions = this.configuration.baseOptions || {};
    let headers = baseOptions.headers || {};

    if (configuration?.unityInstallationId) {
      headers["unity-installation-id"] = configuration.unityInstallationId;
    }
    if (configuration?.analyticsUserId) {
      headers["analytics-user-id"] = configuration.analyticsUserId;
    }

    this.configuration.baseOptions = { ...baseOptions, headers };
  }
}

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
  name: "RequiredError" = "RequiredError";
  constructor(public field: string, msg?: string) {
    super(msg);
  }
}
