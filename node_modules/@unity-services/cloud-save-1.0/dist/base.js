"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Cloud Save API
 * # Introduction This is the API specification for the Unity Cloud Save service that allows player state to be persisted from a game client. To use this API, you must first enable it through the Unity Gaming Services dashboard. ### Notes about the Alpha version This API is currently in its alpha phase and is only available to invited users. During the Alpha period, the information in this document is not guaranteed to be up-to-date and may change without notice. # General Information ## Concepts There are two concepts for saving state in the Cloud Save service, \'Data\' and \'Files\'. Both types of state are stored against a specific player. ### Data \'Data\' are small JSON serializable data, up to 1KB in size, stored as key/value pairs. Limits: - Max 1KB in size - Max 200 items per player  ### Files \'Files\' are larger blobs of arbitrary data, up to 100MB. Limits: - Max 100MB in size - Max 20 files per player ## Rate Limits The API has rate limiting in place. Requests are limited to 30 requests per minute on a per-player basis. The API responds with a `429` HTTP status code if the rate limit is exceeded. It will also respond with a `Retry-After` header to be used in conjunction with a client\'s retry logic. The value is the number of seconds until a request for the given player will be accepted.
 *
 * The version of the OpenAPI document: 1.0-alpha
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;
// Some imports not used depending on template conditions
// @ts-ignore
var axios_1 = require("axios");
exports.BASE_PATH = "https://cloud-save.services.api.unity.com".replace(/\/+$/, "");
/**
 *
 * @export
 */
exports.COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};
/**
 *
 * @export
 * @class BaseAPI
 */
var BaseAPI = /** @class */ (function () {
    function BaseAPI(configuration, basePath, axios) {
        if (basePath === void 0) { basePath = exports.BASE_PATH; }
        if (axios === void 0) { axios = axios_1.default; }
        this.basePath = basePath;
        this.axios = axios;
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
        var baseOptions = this.configuration.baseOptions || {};
        var headers = baseOptions.headers || {};
        if (process.env.CC_HEADER_UNITY_INSTALLATION_ID) {
            headers["unity-installation-id"] =
                process.env.CC_HEADER_UNITY_INSTALLATION_ID;
        }
        if (process.env.CC_HEADER_ANALYTICS_USER_ID) {
            headers["analytics-user-id"] = process.env.CC_HEADER_ANALYTICS_USER_ID;
        }
        if (process.env.CC_ACCESS_TOKEN && !(configuration === null || configuration === void 0 ? void 0 : configuration.accessToken)) {
            this.configuration.accessToken = process.env.CC_ACCESS_TOKEN;
        }
        this.configuration.baseOptions = __assign(__assign({}, baseOptions), { headers: headers });
    }
    return BaseAPI;
}());
exports.BaseAPI = BaseAPI;
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
var RequiredError = /** @class */ (function (_super) {
    __extends(RequiredError, _super);
    function RequiredError(field, msg) {
        var _this = _super.call(this, msg) || this;
        _this.field = field;
        _this.name = "RequiredError";
        return _this;
    }
    return RequiredError;
}(Error));
exports.RequiredError = RequiredError;
